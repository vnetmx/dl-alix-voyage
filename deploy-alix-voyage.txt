#######################################################################
# Copyright 2013 
#    Demand Logic limited <info@demandlogic.co.uk>
#    Nils Toedtmann <nils.toedtmann@demandlogic.co.uk>
#
# This file is part of DemandLogic's ALIX deployment scripts :
#
#    <https://github.com/DemandLogic/dl-alix-voyage>
#
# DemandLogic's ALIX deployment scripts is free software: you can 
# redistribute it and/or modify it under the terms of the GNU General
# Public License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# DemandLogic's ALIX deployment scripts is distributed in the hope that
# it will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with DemandLogic's ALIX deployment scripts. If not, see 
# <http://www.gnu.org/licenses/>.
#######################################################################


#######################################################################
# These are copy-and-paste snippets that help to deploy Voyage Linux 
# onto a compact flash card (CF) for a PC Engine ALIX board
#
# Eventually, this will evolve into fully automated scripts :-)
#######################################################################


CFDEV="/dev/sdc"
MNTPNT="/mnt/cf"
VER="0.9-rc2"
BASE=/root/ALIX

HOSTNAME="dlbi0005.dlnode.com"
ROOTPW="ThisIsNotAPassword"
ADMINPW="ThisIsNotAPasswordEither"

ETH1_ADDR='10.11.12.13'
ETH1_MASK='255.255.255.0'


####################
# Prepare CF
# Clear partition table
dd if=/dev/zero bs=1 seek=446 count=64 of=${CFDEV}


# Create 1G part. ${CFDEV}1, and 2nd part. ${CFDEV}2 with the rest
# DO NOT REMOVE THE EMPTY LINES, they are essential for fdisk to work!
cat << EOF | fdisk ${CFDEV}
n
p


+1G
n
p



w
EOF
# Alternative:
#echo -e 'n\np\n\n\n+1G\nn\np\n\n\n\np\nw\n' | fdisk ${CFDEV}



# Force kernel to re-read the partition table. 
partprobe ${CFDEV}

# Check whether it worked. If not, remove the CF and re-insert it.
fdisk -l ${CFDEV} 

# format the partitions
mkfs.ext2 ${CFDEV}1
mkfs.ext2 ${CFDEV}2

# Make sure they dont require regular fs checks:
tune2fs -c 0 ${CFDEV}1
tune2fs -c 0 ${CFDEV}2
# DONE preparing CF

# Prepare mountpoint
mkdir -p ${MNTPNT}


#########################
# Fetch and install Voyage
mkdir -p $BASE
cd $BASE


wget http://mirror.voyage.hk/download/voyage/voyage-${VER}.tar.bz2
tar xjf voyage-${VER}.tar.bz2

cd voyage-${VER}
less README

# TODO: Unset LANG etc
# TODO: Script this!
./usr/local/sbin/voyage.update

mount ${CFDEV}1 ${MNTPNT}
BINDMOUNTS="dev/pts proc"
for fs in ${BINDMOUNTS} ; do
    mount -o bind {,${MNTPNT}}/${fs}
done
cat /etc/resolv.conf > ${MNTPNT}/run/resolvconf/resolv.conf



chroot ${MNTPNT}
########################################################
LANG=""

PACKAGES1="dialog"
PACKAGES2="ca-certificates munin-node ntpdate openvpn screen ssl-cert telnet vim-nox"
PACKAGES3="bsd-mailx postfix"
PACKAGES4="arping iptraf tcpdump"  ## open{ssh,ssl,vpn}-blacklist?
PACKAGES5=""

apt-get remove --purge dnsmasq rpcbind
apt-get autoremove

apt-get update
apt-get install ${PACKAGES1}
apt-get upgrade
apt-get install ${PACKAGES2}

#TODO:
# (copy skeletton with rsync)


# Set root password
echo "root:${ROOTPW}" | chpasswd

# Set hostname
echo "${HOSTNAME}" > /etc/hostname
echo "${HOSTNAME}" > /etc/mailname

# Prepare /etc/hosts
cat << EOF > /etc/hosts
127.0.0.1 localhost
127.0.1.1 ${HOSTNAME}
EOF


# Network conf
mv /etc/network/interfaces{,.ORIG}
cat << EOF > /etc/network/interfaces
auto  lo
iface lo inet loopback

# Towards internet
auto  eth0
iface eth0 inet dhcp
      # post-up /usr/sbin/ntpdate -s 0.uk.pool.ntp.org

# Towards BMS
auto  eth1
iface eth1 inet static
        address ${ETH1_ADDR}
        netmask ${ETH1_MASK}
      # gateway 
      # dns-nameservers 
EOF


# TODO: verify that above "post-up ntpdate" works on dhcp interface
cat << EOF > /etc/cron.d/ntpdate
MAILTO=root

*/10 *  * * *   root    /usr/sbin/ntpdate -s 0.uk.pool.ntp.org  2>  /dev/null
EOF


# Set root alias
echo "root: hostmaster@demandlogic.co.uk" >> /etc/aliases


apt-get install ${PACKAGES3}
    # on "Postfix Configuration", choose:
    #   "mail server configuration" = "2. Internet Site"
    #   "System mail name" = " dlbi0004.dlnode.com"

# Check postfix conf
newaliases
cp -a /etc/postfix/main.cf{,.ORIG}
sed  -e 's,^\(myhostname .*\)$,# \1   # use \`hostname\`,' -e 's,^\(myorigin .*\)$,#\1\nmyorigin = \$myhostname,' -e 's/^\(mydestination .*\)$/#\1\nmydestination = \$myhostname, localhost/' -e 's,^\(inet_interfaces\) .*$,\1 = localhost,' -i /etc/postfix/main.cf


# Prepare /vol mount?
# Configure munin, create /var/lib/munin

# Configure "admin" user


########################################################
for s in supervisor munin-node inetutils-syslogd ; do
    service $s stop
done
exit

# Configure OpenVPN
cp -a openvpn-client.conf ${MNTPNT}/etc/openvpn/client.conf
cp -a ca.crt              ${MNTPNT}/etc/openvpn/
# Now copy the VPN client cert and key to ${MNTPNT}/etc/openvpn/
# and softlink them as "client.crt" and "client.key"
#
# And set "remote" properly in ${MNTPNT}/etc/openvpn/client.conf


for fs in ${BINDMOUNTS} ; do
    umount ${MNTPNT}/${fs}
done
umount ${MNTPNT}

########################################################
# Now:

  # Remove CF from reader
  # Insert CF into ALIX board
  # Connect the ALIX eth0 (probably next to its power  socket) to the Firestation LAN
  # Connect the ALIX eth1 (probably nect to its serial socket) to the netbook
  # Tell Nils when done
  # Power up the ALIX

########################################################
# ssh into the ALIX, "sudo -i" 
mkdir /mnt/vol
echo "/dev/hda2      /mnt/vol    ext2   rw,noatime,errors=remount-ro    0 0" >>  /etc/fstab
mount -a

cd /
mv home/ mnt/vol/
ln -s mnt/vol/home/
mv opt/ mnt/vol/
ln -s mnt/vol/opt/



useradd  --gid adm  --groups sudo  --shell /bin/bash  --comment "DL Admin"  --create-home  admin
echo "admin:${ADMINPW}" | chpasswd
sudo -i -u admin
    mkdir -m 700 ~/.ssh
    SSH_KEYS="nils.toedtmann.dsa dan.mauger.rsa joe.short.dsa"
    for key in ${SSH_KEYS} ; do wget -qO- "https://raw.github.com/nilstoedtmann/sshkeys/master/${key}.pub" >> .ssh/authorized_keys ; done
    

apt-get clean 


# Tighten SSHd. No LANG-setting to prevent annoying locale messages
sed   -e 's,^\(PermitRootLogin\) .*$,\1 no,'   -e 's,^#*\(PasswordAuthentication\) .*$,\1 no,'   -e 's,^\(AcceptEnv.*\)$,#\1   # no LANG envs on ALIX,'   -e 's,^\(UsePAM\) .*$,\1 no,'  -i /etc/ssh/sshd_config
echo "UseDNS no" >> /etc/ssh/sshd_config


##############################
# Disable automatic bash completion
sed '1i\
# No automatic bash completion here\
return\
' -i /etc/profile.d/bash_completion.sh

for bashrc in /etc/skel/.bashrc /root/.bashrc /home/*/.bashrc ; do
    sed -e 's/\(if \)\(! shopt -oq posix; then\)/\1 \[ "\$BASH_COMPLETION_ON" = "yes" \] \&\& \2/' -i ${bashrc}
done


##############################
# Configure nightly router reboot
ROUTER_IP="192.168.1.1"

echo -e "\n${ROUTER_IP} router" >> /etc/hosts

scp /etc/ssh/ssh_host_rsa_key.pub root@${ROUTER_IP}:/etc/dropbear/authorized_keys
mkdir -p 700 /root/.ssh
cd /root/.ssh
ln -s ln -s /etc/ssh/ssh_host_rsa_key id_rsa

ssh router id

cat << EOF > /etc/cron.daily/router-reboot
#!/bin/bash
ssh router /sbin/reboot
EOF
chmod +x /etc/cron.daily/router-reboot



# OLD STYLE, IGNORE:


mkdir -p /opt/demand_logic/etc/3G-router

cat << EOF > /opt/demand_logic/etc/3G-router/router-ssh
#!/bin/bash
ssh -i /etc/ssh/ssh_host_rsa_key -t root@${ROUTER_IP} \$@
EOF

cat << EOF > /opt/demand_logic/etc/3G-router/router-reboot
#!/bin/bash
/opt/demand_logic/etc/3G-router/router-ssh /sbin/reboot
EOF

chown -R admin:adm /opt/demand_logic/etc/3G-router
chmod +x /opt/demand_logic/etc/3G-router/router-{ssh,reboot}

ln -s /opt/demand_logic/etc/3G-router/router-reboot /etc/cron.daily
